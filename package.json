{
  "name": "mytourbook-frontend",
  "version": "7.5.0",
  "license": "Apache-2.0",
  "angular-cli": {},
  "config": {
    "solrgoal": "install-solr-doit",
    "solrdownloadurl": "https://archive.apache.org/dist/lucene/solr/6.6.0/solr-6.6.0.tgz",
    "set_this_for_solrgoal_withsolr": "install-solr-doit",
    "set_this_for_solrgoal_withouthsolr": "noop",
    "imagemagicgoal": "install-imagemagic-dosymlink",
    "imagemagicdownloadurl": "https://download.imagemagick.org/archive/binaries/ImageMagick-7.1.0-62-portable-Q16-HDRI-x86.zip",
    "imagemagicsharedpath": "F:/ProgrammeShared/ImageMagick/",
    "set_this_for_imagemagicgoal_withdownload": "install-imagemagic-doinstall",
    "set_this_for_imagemagicgoal_withsymlink": "install-imagemagic-dosymlink"
  },
  "scripts": {
    "adminserver-serve-dev": "node dist/backend/adminServer.js --adminbackend config/adminServer.dev.json --firewall config/adminfirewall.dev.json --debug true",
    "adminserver-serve-import": "node dist/backend/adminServer.js --adminbackend config/adminServer.import.json --firewall config/adminfirewall.dev.json --debug true",
    "adminserver-serve-beta": "node dist/backend/adminServer.js --adminbackend config/adminServer.beta.json --firewall config/adminfirewall.beta.json",
    "adminserver-serve-prod": "node dist/backend/adminServer.js --adminbackend config/adminServer.prod.json --firewall config/adminfirewall.prod.json",
    "backend-build": "tsc -p src/backend && webpack --config backend-webpack.config.js && webpack --config serverAdmin-webpack.config.js && webpack --config adminServer-webpack.config.js && npm run build-after-copy-contrib && npm run build-after-copy-contrib-solrlang && npm run build-after-copy-overrides-config",
    "backend-build-stats": "tsc -p src/backend && webpack --config backend-webpack.config.js --profile --json > dist/server-stats.json && webpack --config serverAdmin-webpack.config.js  --profile --json > dist/serveradmin-stats.json && webpack --config adminServer-webpack.config.js  --profile --json > dist/adminserver-stats.json && npm run build-after-copy-contrib && npm run build-after-copy-contrib-solrlang && npm run build-after-copy-overrides-config",
    "backend-build-and-serve-dev": "npm run backend-build && npm run backend-serve-dev",
    "backend-prepare-appenv-dev": "node dist/backend/serverAdmin.js --preparedCommand prepareAppEnv --adminclibackend config/adminCli.dev.json --backend config/backend.dev.json",
    "backend-prepare-appenv-import": "node dist/backend/serverAdmin.js --preparedCommand prepareAppEnv --adminclibackend config/adminCli.import.json --backend config/backend.import.json",
    "backend-prepare-appenv-beta": "node dist/backend/serverAdmin.js --preparedCommand prepareAppEnv --adminclibackend config/adminCli.beta.json --backend config/backend.beta.json",
    "backend-prepare-appenv-prod": "node dist/backend/serverAdmin.js --preparedCommand prepareAppEnv --adminclibackend config/adminCli.prod.json --backend config/backend.prod.json",
    "backend-prepare-appenv-afterinstall-beta": "node dist/backend/serverAdmin.js --preparedCommand prepareAppEnvAfterInstall --adminclibackend config/adminCli.beta.json",
    "backend-prepare-appenv-afterinstall-dev": "node dist/backend/serverAdmin.js --preparedCommand prepareAppEnvAfterInstall --adminclibackend config/adminCli.dev.json",
    "backend-prepare-appenv-afterinstall-prod": "node dist/backend/serverAdmin.js --preparedCommand prepareAppEnvAfterInstall --adminclibackend config/adminCli.prod.json",
    "backend-prepare-appenv-afterupdate-beta": "node dist/backend/serverAdmin.js --preparedCommand prepareAppEnvAfterUpdate --adminclibackend config/adminCli.beta.json",
    "backend-prepare-appenv-afterupdate-dev": "node dist/backend/serverAdmin.js --preparedCommand prepareAppEnvAfterUpdate --adminclibackend config/adminCli.dev.json",
    "backend-prepare-appenv-afterupdate-prod": "node dist/backend/serverAdmin.js --preparedCommand prepareAppEnvAfterUpdate --adminclibackend config/adminCli.prod.json",
    "backend-prepare-appenv-beforebuild": "node dist/backend/serverAdmin.js --preparedCommand prepareAppEnvBeforeBuild --adminclibackend config/adminCli.dev.json",
    "backend-serve-dev": "node dist/backend/backend.js --backend config/backend.dev.json --firewall config/firewall.dev.json",
    "backend-serve-import": "node dist/backend/backend.js --backend config/backend.import.json --firewall config/firewall.dev.json",
    "backend-serve-beta": "node dist/backend/backend.js --backend config/backend.beta.json --firewall config/firewall.beta.json",
    "backend-serve-prod": "node dist/backend/backend.js --backend config/backend.prod.json --firewall config/firewall.prod.json",
    "backend-start-database-managed-facetcache-dev": "node dist/backend/serverAdmin.js --adminclibackend config/adminCli.dev.json --backend config/backend.dev.json --command facetCacheManager --action prepareAndStartDatabaseManagedFacets ",
    "backend-stop-database-managed-facetcache-dev": "node dist/backend/serverAdmin.js --adminclibackend config/adminCli.dev.json --backend config/backend.dev.json --command facetCacheManager --action stopAndDropDatabaseManagedFacets ",
    "backend-start-database-managed-facetcache-import": "node dist/backend/serverAdmin.js --adminclibackend config/adminCli.import.json --backend config/backend.import.json --command facetCacheManager --action prepareAndStartDatabaseManagedFacets ",
    "backend-stop-database-managed-facetcache-import": "node dist/backend/serverAdmin.js --adminclibackend config/adminCli.import.json --backend config/backend.import.json --command facetCacheManager --action stopAndDropDatabaseManagedFacets ",
    "backend-start-server-managed-facetcache-dev": "node dist/backend/serverAdmin.js --adminclibackend config/adminCli.dev.json --backend config/backend.dev.json --command facetCacheManager --action prepareAndStartServerManagedFacets ",
    "backend-start-server-managed-facetcache-import": "node dist/backend/serverAdmin.js --adminclibackend config/adminCli.import.json --backend config/backend.import.json --command facetCacheManager --action prepareAndStartServerManagedFacets ",
    "backend-test": "tsc -p src/backend/tsconfig.spec.json && istanbul cover node_modules/jasmine/bin/jasmine.js -- --config=backend.jasmine.json && remap-istanbul -i ./coverage/backend-js/coverage.json -t html -o ./coverage/backend",
    "build-dev": "npm run build-dev-de && npm run build-dev-en && npm run build-after-copy-overrides-dist-dev",
    "build-dev-de": "ng build frontend --base-href=/mytbdev/de/ --configuration=dev-de --aot true --output-path dist/static/mytbdev/de",
    "build-dev-de-stats": "ng build frontend --base-href=/mytbdev/de/ --configuration=dev-de --aot true --stats-json true --output-path dist/static/mytbdev/de",
    "build-dev-en": "ng build frontend --base-href=/mytbdev/en/ --configuration=dev-en --aot true --output-path dist/static/mytbdev/en",
    "build-beta": "npm run build-beta-de && npm run build-beta-en && npm run build-after-copy-overrides-dist-beta",
    "build-beta-de": "ng build frontend --base-href=/mytbbeta/de/ --configuration=beta-de --aot true --output-path dist/static/mytbbeta/de",
    "build-beta-en": "ng build frontend --base-href=/mytbbeta/en/ --configuration=beta-en --aot true --output-path dist/static/mytbbeta/en",
    "build-prod": "npm run build-prod-de && npm run build-prod-en && npm run build-after-copy-overrides-dist-prod",
    "build-prod-de": "ng build frontend --base-href=/mytb/de/ --configuration=prod-de --aot true --output-path dist/static/mytb/de",
    "build-prod-en": "ng build frontend --base-href=/mytb/en/ --configuration=prod-en --aot true --output-path dist/static/mytb/en",
    "build-viewer": "npm run build-viewer-de && npm run build-viewer-en && npm run build-after-copy-overrides-dist-viewer",
    "build-viewer-de": "ng build frontend --configuration=viewer-de --aot true --output-path dist/static/mytbviewer/de && npm run build-after-copy-preinline-de && node devtools/create-allinone-html.js dist/static/mytbviewer/de/index.viewer.html dist/static/mytbviewer/de/index.viewer.full.html",
    "build-viewer-en": "ng build frontend --configuration=viewer-en --aot true --output-path dist/static/mytbviewer/en && npm run build-after-copy-preinline-en && node devtools/create-allinone-html.js dist/static/mytbviewer/en/index.viewer.html dist/static/mytbviewer/en/index.viewer.full.html",
    "build-viewer-de-stats": "ng build frontend --configuration=viewer-de --aot true --stats-json true --output-path dist/static/mytbviewer/de && npm run build-after-copy-preinline-de && node devtools/create-allinone-html.js dist/static/mytbviewer/de/index.viewer.html dist/static/mytbviewer/de/index.viewer.full.html",
    "build-after-copy-contrib": "cpx --include-empty-dirs \"contrib/**/*\" dist/contrib/ && cpx --include-empty-dirs --verbose \"installer/solr/**/*\" dist/contrib/solr/server/solr/",
    "build-after-copy-contrib-solrlang": "cpx --include-empty-dirs --verbose \"contrib/solr/contrib/lang/*.*\" dist/contrib/solr/server/solr/coremytbbeta/conf/lang/ && cpx --include-empty-dirs --verbose \"contrib/solr/contrib/lang/*.*\" dist/contrib/solr/server/solr/coremytbprod/conf/lang/",
    "build-after-copy-preinline-de": "cpx --include-empty-dirs --verbose \"node_modules/lz-string/libs/lz-string.min.js\" dist/static/mytbviewer/de/",
    "build-after-copy-preinline-en": "cpx --include-empty-dirs --verbose \"node_modules/lz-string/libs/lz-string.min.js\" dist/static/mytbviewer/en/",
    "build-after-copy-overrides-config": "cpx --include-empty-dirs --verbose \"overrides/after-build/config/**/*.*\" config/",
    "build-after-copy-overrides-dist-viewer": "cpx --include-empty-dirs --verbose \"overrides/after-build/dist/mytbviewer/**/*.*\" dist/static/mytbviewer/",
    "build-after-copy-overrides-dist-dev": "cpx --include-empty-dirs --verbose \"overrides/after-build/dist/mytbdev/**/*.*\" dist/static/mytbdev/ && cpx --include-empty-dirs \"overrides/after-build/dist/mytbdev/**/*.*\" dist/mytbdev-server/",
    "build-after-copy-overrides-dist-beta": "cpx --include-empty-dirs --verbose \"overrides/after-build/dist/mytbbeta/**/*.*\" dist/static/mytbbeta/ && cpx --include-empty-dirs \"overrides/after-build/dist/mytbbeta**/*.*\" dist/mytbbeta-server/",
    "build-after-copy-overrides-dist-prod": "cpx --include-empty-dirs --verbose \"overrides/after-build/dist/mytb/**/*.*\" dist/static/mytb/ && cpx --include-empty-dirs \"overrides/after-build/dist/mytb/**/*.*\" dist/mytb-server/",
    "compodoc": "compodoc src/frontend/ -p src/frontend/tsconfig.app.json -s --port 3001",
    "dbpublish-mytbexportbetadb_mysql": "node dist/backend/serverAdmin.js --debug true --command dbPublish --action publishDB --adminclibackend config/adminCli.beta.json --publishConfigFile config/dbpublish.json --profile mysql --target mytbexportbetadb",
    "dbpublish-mytbexportbetadb_sqlite": "node dist/backend/serverAdmin.js --debug true --command dbPublish --action publishDB --adminclibackend config/adminCli.beta.json --publishConfigFile config/dbpublish.json --profile sqlite --target mytbexportbetadb",
    "dbpublish-mytbexportproddb_mysql": "node dist/backend/serverAdmin.js --debug true --command dbPublish --action publishDB --adminclibackend config/adminCli.prod.json --publishConfigFile config/dbpublish.json --profile mysql --target mytbexportproddb",
    "dbpublish-mytbexportproddb_sqlite": "node dist/backend/serverAdmin.js --debug true --command dbPublish --action publishDB --adminclibackend config/adminCli.prod.json --publishConfigFile config/dbpublish.json --profile sqlite --target mytbexportproddb",
    "solrpublish-mytbexportbetadb_mysql": "node dist/backend/serverAdmin.js --debug true --command solrPublish --action publishSolr --adminclibackend config/adminCli.beta.json --publishConfigFile config/dbpublish.json --profile mysql --target mytbexportbetadb",
    "solrpublish-mytbexportbetadb_sqlite": "node dist/backend/serverAdmin.js --debug true --command solrPublish --action publishSolr --adminclibackend config/adminCli.beta.json --publishConfigFile config/dbpublish.json --profile sqlite --target mytbexportbetadb",
    "solrpublish-mytbexportproddb_mysql": "node dist/backend/serverAdmin.js --debug true --command solrPublish --action publishSolr --adminclibackend config/adminCli.prod.json --publishConfigFile config/dbpublish.json --profile mysql --target mytbexportproddb",
    "solrpublish-mytbexportproddb_sqlite": "node dist/backend/serverAdmin.js --debug true --command solrPublish --action publishSolr --adminclibackend config/adminCli.prod.json --publishConfigFile config/dbpublish.json --profile sqlite --target mytbexportproddb",
    "e2e": "ng e2e",
    "frontendserver-build-server-dev-de": "tsc -p src/frontendserver && webpack --config frontendserver-webpack.config.js --progress --colors --profile=dev-de",
    "frontendserver-build-server-beta-de": "tsc -p src/frontendserver && webpack --config frontendserver-webpack.config.js --progress --colors --profile=beta-de",
    "frontendserver-build-server-prod-de": "tsc -p src/frontendserver && webpack --config frontendserver-webpack.config.js --progress --colors --profile=prod-de",
    "frontendserver-build-admin-dev-de": "tsc -p src/frontendserver && webpack --config frontendserverAdmin-webpack.config.js --progress --colors --profile=dev-de",
    "frontendserver-build-admin-beta-de": "tsc -p src/frontendserver && webpack --config frontendserverAdmin-webpack.config.js --progress --colors --profile=beta-de",
    "frontendserver-build-admin-prod-de": "tsc -p src/frontendserver && webpack --config frontendserverAdmin-webpack.config.js --progress --colors --profile=prod-de",
    "frontendserver-build-angularserver-dev-de": "tsc -p src/frontendserver && webpack --config frontendserverAngular-webpack.config.js --progress --colors --profile=dev-de",
    "frontendserver-build-angularserver-beta-de": "tsc -p src/frontendserver && webpack --config frontendserverAngular-webpack.config.js --progress --colors --profile=beta-de",
    "frontendserver-build-angularserver-prod-de": "tsc -p src/frontendserver && webpack --config frontendserverAngular-webpack.config.js --progress --colors --profile=prod-de",
    "frontendserver-build-dev-de": "ng build server --configuration=dev-de --output-path dist/mytbdev-server/de",
    "frontendserver-build-beta-de": "ng build server --configuration=beta-de --output-path dist/mytbbeta-server/de",
    "frontendserver-build-prod-de": "ng build server --configuration=prod-de --output-path dist/mytb-server/de",
    "frontendserver-build-and-serve-dev-de": "npm run frontendserver-build-dev-de && npm run frontendserver-build-server-dev-de && npm run frontendserver-serve-dev-de",
    "frontendserver-build-and-serve-beta-de": "npm run frontendserver-build-beta-de && npm run frontendserver-build-server-beta-de && npm run frontendserver-serve-beta-de",
    "frontendserver-build-and-serve-prod-de": "npm run frontendserver-build-prod-de && npm run frontendserver-build-server-prod-de && npm run frontendserver-serve-prod-de",
    "frontendserver-serve-dev-de": "node dist/frontendserver-dev-de/frontendserver.js --backend config/backend.dev.json --firewall config/firewall.dev.json --frontend config/frontend.dev.json",
    "frontendserver-serve-import-de": "node dist/frontendserver-dev-de/frontendserver.js --backend config/backend.import.json --firewall config/firewall.dev.json --frontend config/frontend.dev.json",
    "frontendserver-serve-beta-de": "node dist/frontendserver-beta-de/frontendserver.js --backend config/backend.beta.json --firewall config/firewall.beta.json --frontend config/frontend.beta.json",
    "frontendserver-serve-prod-de": "node dist/frontendserver-de/frontendserver.js --backend config/backend.prod.json --firewall config/firewall.prod.json --frontend config/frontend.prod.json",
    "frontendserverAngular-serve-dev-de": "node dist/frontendserver-dev-de/frontendserverAngular.js --backend config/backend.dev.json --firewall config/firewall.dev.json --frontend config/frontend.dev.json",
    "frontendserverAngular-serve-beta-de": "node dist/frontendserver-beta-de/frontendserverAngular.js --backend config/backend.beta.json --firewall config/firewall.beta.json --frontend config/frontend.beta.json",
    "frontendserverAngular-serve-prod-de": "node dist/frontendserver-de/frontendserverAngular.js --backend config/backend.prod.json --firewall config/firewall.prod.json --frontend config/frontend.prod.json",
    "generate-sitemaps-dev": "node dist/backend/serverAdmin.js --command generateSitemap --action generateSitemap --adminclibackend config/adminCli.dev.json --backend config/backend.dev.json config/sitemap-de.json && node dist/backend/serverAdmin.js --command generateSitemap --action generateSitemap --adminclibackend config/adminCli.dev.json --backend config/backend.dev.json config/sitemap-en.json",
    "generate-sitemaps-beta": "node dist/backend/serverAdmin.js --command generateSitemap --action generateSitemap --adminclibackend config/adminCli.beta.json --backend config/backend.beta.json config/sitemap-de.json && node dist/backend/serverAdmin.js --command generateSitemap --action generateSitemap --adminclibackend config/adminCli.beta.json --backend config/backend.beta.json config/sitemap-en.json",
    "generate-sitemaps-prod": "node dist/backend/serverAdmin.js --command generateSitemap --action generateSitemap --adminclibackend config/adminCli.prod.json --backend config/backend.prod.json config/sitemap-de.json && node dist/backend/serverAdmin.js --command generateSitemap --action generateSitemap --adminclibackend config/adminCli.prod.json --backend config/backend.prod.json config/sitemap-en.json",
    "serverAdmin-help-beta": "node dist/backend/serverAdmin.js --adminclibackend config/adminCli.beta.json --usage",
    "serverAdmin-help-dev": "node dist/backend/serverAdmin.js --adminclibackend config/adminCli.dev.json --usage",
    "serverAdmin-help-import": "node dist/backend/serverAdmin.js --adminclibackend config/adminCli.import.json --usage",
    "serverAdmin-help-prod": "node dist/backend/serverAdmin.js --adminclibackend config/adminCli.prod.json --usage",
    "init-cache-dev": "node dist/backend/serverAdmin.js --adminclibackend config/adminCli.dev.json --backend config/backend.dev.json --command initCache --action initCache",
    "init-cache-beta": "node dist/backend/serverAdmin.js --adminclibackend config/adminCli.beta.json --backend config/backend.beta.json --command initCache --action initCache",
    "init-cache-prod": "node dist/backend/serverAdmin.js --adminclibackend config/adminCli.prod.json --backend config/backend.prod.json --command initCache --action initCache",
    "init-frontendserver-cache-dev-de": "node dist/frontendserver-dev-de/frontendserverAdmin.js --localSitemapUrl http://localhost:4001/mytbdev/de/sitemap-pdoc-de.xml --sitemapbase http://localhost:4001/mytbdev/de/ --backend config/backend.dev.json --frontend config/frontend.dev.json",
    "init-frontendserver-cache-beta-de": "node dist/frontendserver-beta-de/frontendserverAdmin.js --backend config/backend.beta.json --frontend config/frontend.beta.json",
    "init-frontendserver-cache-prod-de": "node dist/frontendserver-de/frontendserverAdmin.js --backend config/backend.prod.json --frontend config/frontend.prod.json",
    "install-imagemagic": "cross-var npm run $npm_package_config_imagemagicgoal",
    "install-imagemagic-doinstall": "npm run install-imagemagic-clear && npm run install-imagemagic-download && npm run install-imagemagic-unpack && npm run install-imagemagic-cleanout",
    "install-imagemagic-dosymlink": "npm run install-imagemagic-clear && npm run install-imagemagic-symlink",
    "install-imagemagic-clear": "cross-os install-imagemagic-clear-os",
    "install-imagemagic-clear-os": {
      "darwin": "./node_modules/.bin/rimraf contrib/imagemagic && ./node_modules/.bin/mkdirp contrib/imagemagic",
      "linux": "./node_modules/.bin/rimraf contrib/imagemagic && ./node_modules/.bin/mkdirp contrib/imagemagic",
      "win32": "node_modules\\.bin\\rimraf contrib/imagemagic && node_modules\\.bin\\mkdirp contrib/imagemagic"
    },
    "install-imagemagic-download": "cd contrib && cd imagemagic && cross-var curl $npm_package_config_imagemagicdownloadurl -o imagemagic.zip",
    "install-imagemagic-unpack": "cross-os install-imagemagic-unpack-os",
    "install-imagemagic-unpack-os": {
      "darwin": "cd contrib/imagemagic && ../../node_modules/.bin/extract-zip imagemagic.zip",
      "linux": "cd contrib/imagemagic && ../../node_modules/.bin/extract-zip imagemagic.zip",
      "win32": "cd contrib\\imagemagic && ..\\..\\node_modules\\.bin\\extract-zip imagemagic.zip"
    },
    "install-imagemagic-cleanout": "cross-os install-imagemagic-cleanout-os",
    "install-imagemagic-cleanout-os": {
      "darwin": "./node_modules/.bin/rimraf contrib/imagemagic/imagemagic.zip",
      "linux": "./node_modules/.bin/rimraf contrib/imagemagic/imagemagic.zip",
      "win32": "node_modules\\.bin\\rimraf contrib/imagemagic/imagemagic.zip"
    },
    "install-imagemagic-symlink": "cd contrib && cross-var symlink-dir $npm_package_config_imagemagicsharedpath imagemagic",
    "install-solr": "cross-var npm run $npm_package_config_solrgoal",
    "install-solr-doit": "npm run install-solr-clear && npm run install-solr-download && npm run install-solr-unpack && npm run install-solr-cleanout && npm run install-solr-download-langfiles && npm run install-solr-convert-langfiles && npm run install-solr-download-dataimport",
    "install-solr-clear": "cross-os install-solr-clear-os",
    "install-solr-clear-os": {
      "darwin": "./node_modules/.bin/rimraf contrib/solr && ./node_modules/.bin/mkdirp contrib/solr && ./node_modules/.bin/mkdirp contrib/solr/contrib/dataimporthandler/lib && ./node_modules/.bin/mkdirp contrib/solr/contrib/lang",
      "linux": "./node_modules/.bin/rimraf contrib/solr && ./node_modules/.bin/mkdirp contrib/solr && ./node_modules/.bin/mkdirp contrib/solr/contrib/dataimporthandler/lib && ./node_modules/.bin/mkdirp contrib/solr/contrib/lang",
      "win32": "node_modules\\.bin\\rimraf contrib/solr && node_modules\\.bin\\mkdirp contrib/solr && node_modules\\.bin\\mkdirp contrib/solr/contrib/dataimporthandler/lib && node_modules\\.bin\\mkdirp contrib/solr/contrib/lang"
    },
    "install-solr-download": "cd contrib && cross-var curl $npm_package_config_solrdownloadurl -o solr.tgz",
    "install-solr-download-langfiles": "cd contrib && curl https://raw.githubusercontent.com/elastic/hunspell/master/dicts/de_DE/de_DE.dic -o solr/contrib/lang/hunspell_de_DE.dic && curl https://raw.githubusercontent.com/elastic/hunspell/master/dicts/de_DE/de_DE.aff -o solr/contrib/lang/hunspell_de_DE.aff && curl https://netix.dl.sourceforge.net/project/germandict/german.7z -o solr/contrib/lang/german.7z",
    "install-solr-convert-langfiles": "sed \"s/\\\\/.*//g\" contrib/solr/contrib/lang/hunspell_de_DE.dic > contrib/solr/contrib/lang/dictionary.txt && iconv -f \"windows-1252\" -t \"UTF-8\" contrib/solr/contrib/lang/dictionary.txt > contrib/solr/contrib/lang/dictionary_de.txt",
    "install-solr-download-dataimport": "npm run install-solr-download-dataimport-mysql && npm run install-solr-download-dataimport-sqlite",
    "install-solr-download-dataimport-mysql": "cd contrib && curl https://downloads.mariadb.com/Connectors/java/connector-java-2.7.1/mariadb-java-client-2.7.1.jar -o solr/contrib/dataimporthandler/lib/mariadb-java-client.jar",
    "install-solr-download-dataimport-sqlite": "cd contrib && curl https://repo1.maven.org/maven2/org/xerial/sqlite-jdbc/3.34.0/sqlite-jdbc-3.34.0.jar -o solr/contrib/dataimporthandler/lib/sqlite-jdbc.jar",
    "install-solr-unpack": "cd contrib && tar xzf solr.tgz -C solr --strip-components=1",
    "install-solr-cleanout": "cross-os install-solr-cleanout-os",
    "install-solr-cleanout-os": {
      "darwin": "./node_modules/.bin/rimraf contrib/solr.tgz contrib/solr/example",
      "linux": "./node_modules/.bin/rimraf contrib/solr.tgz contrib/solr/example",
      "win32": "node_modules\\.bin\\rimraf contrib/solr.tgz contrib/solr/example"
    },
    "lint": "ng lint",
    "ng": "ng",
    "prepare": "patch-package && npm run prepare-symlinks && npm run prepare-build && npm run prepare-build-before-copy-overrides-installer && npm run prepare-build-before-copy-overrides-sbin && npm run prepare-build-before-copy-overrides-src && npm run prepare-build-before-copy-overrides-devtools",
    "prepare-symlinks": "symlink-dir src/shared src/backend/shared && symlink-dir src/shared src/frontend/shared && symlink-dir src/shared src/frontendserver/shared",
    "prepare-build": "cross-os prepare-build-os",
    "prepare-build-before-copy-overrides-installer": "cpx --include-empty-dirs --verbose \"overrides/before-build/installer/**/*.*\" installer/",
    "prepare-build-before-copy-overrides-sbin": "cpx --include-empty-dirs --verbose \"overrides/before-build/sbin/**/*.*\" sbin/",
    "prepare-build-before-copy-overrides-src": "cpx --include-empty-dirs --verbose \"overrides/before-build/src/**/*.*\" src/",
    "prepare-build-before-copy-overrides-devtools": "cpx --include-empty-dirs --verbose \"overrides/before-build/devtools/**/*.*\" devtools/",
    "prepare-build-os": {
      "darwin": "./node_modules/.bin/rimraf node_modules/@dps/*/node_modules/@dps & ./node_modules/.bin/rimraf dist && ./node_modules/.bin/mkdirp dist && ./node_modules/.bin/mkdirp src/shared",
      "linux": "./node_modules/.bin/rimraf node_modules/@dps/*/node_modules/@dps & ./node_modules/.bin/rimraf dist && ./node_modules/.bin/mkdirp dist && ./node_modules/.bin/mkdirp src/shared",
      "win32": "node_modules\\.bin\\rimraf node_modules\\@dps\\*\\node_modules\\@dps & node_modules\\.bin\\rimraf dist && node_modules\\.bin\\mkdirp dist && node_modules\\.bin\\mkdirp src\\shared"
    },
    "start": "ng serve frontend --watch --aot true --configuration de --proxy-config proxy.conf.json",
    "start-en": "ng serve frontend --watch --aot true --configuration en --proxy-config proxy.conf.json",
    "static-serve": "cd dist/static/ && live-server --port=4300 --no-browser --host=localhost --entry-file=/mytbdev/de/index.html",
    "serve-mycms-frontend-devtools": "live-server --port=4201 --no-browser --host=localhost --entry-file=index.html node_modules/@dps/mycms-frontend-commons/dist/devtools/httproot",
    "test": "ng test frontend --preserveSymlinks=true --environment=dev --watch=false",
    "testCoverage": "ng test frontend --preserveSymlinks=true --environment=dev --code-coverage true --watch=false",
    "testwatch": "ng test frontend --preserveSymlinks=true --environment=dev --watch=true",
    "version": "ng -v",
    "webpack-analyzer:dev-de": "webpack-bundle-analyzer dist/static/mytbdev/de/stats.json",
    "webpack-analyzer:viewer-de": "webpack-bundle-analyzer dist/static/mytbviewer/de/stats.json",
    "webpack-analyzer:server": "webpack-bundle-analyzer dist/server-stats.json",
    "webpack-analyzer:serveradmin": "webpack-bundle-analyzer dist/serveradmin-stats.json",
    "webpack-analyzer:adminserver": "webpack-bundle-analyzer dist/adminserver-stats.json",
    "xi18n": "ng xi18n frontend --locale de --out-file messages.de.xlf --output-path src/frontend/locales/ --i18n-format xlf --verbose --progress",
    "xi18n-en": "ng xi18n frontend --locale en --out-file messages.en.xlf --output-path src/frontend/locales/ --i18n-format xlf --verbose --progress",
    "noop": "npm version"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "7.2.16",
    "@angular/common": "7.2.16",
    "@angular/compiler": "7.2.16",
    "@angular/core": "7.2.16",
    "@angular/forms": "7.2.16",
    "@angular/http": "7.2.16",
    "@angular/platform-browser": "7.2.16",
    "@angular/platform-browser-dynamic": "7.2.16",
    "@angular/platform-server": "7.2.16",
    "@angular/router": "7.2.16",
    "@angular/service-worker": "7.2.16",
    "@dps/mycms-commons": "git://github.com/das-praktische-schreinerlein/mycms-commons.git#5.7.0",
    "@dps/mycms-frontend-commons": "git://github.com/das-praktische-schreinerlein/mycms-frontend-commons.git#5.7.0",
    "@dps/mycms-server-commons": "git://github.com/das-praktische-schreinerlein/mycms-server-commons.git#5.7.0",
    "@ng-bootstrap/ng-bootstrap": "4.2.2",
    "@nguniversal/express-engine": "7.1.1",
    "@nguniversal/module-map-ngfactory-loader": "7.1.1",
    "@ngx-translate/core": "11.0.1",
    "@ngx-translate/http-loader": "4.0.0",
    "@risingstack/protect": "1.2.0",
    "@xmldom/xmldom": "0.8.6",
    "angular-2-dropdown-multiselect": "1.9.0",
    "angular2-cookie-law": "7.0.1",
    "angulartics2": "7.5.2",
    "axios": "0.19.2",
    "body-parser": "1.19.0",
    "bootstrap": "4.5.0",
    "compression": "1.7.4",
    "cookie-parser": "1.4.5",
    "core-js": "2.6.11",
    "cors": "2.8.5",
    "db-migrate": "0.11.11",
    "db-migrate-mysql": "2.1.1",
    "db-migrate-sqlite3": "0.4.0",
    "deep-equal": "1.1.1",
    "detect-browser": "4.8.0",
    "domino": "2.1.5",
    "express": "4.17.1",
    "express-ipfilter": "1.1.2",
    "fast-exif": "1.0.1",
    "fast-image-size": "0.1.3",
    "fluent-ffmpeg": "2.1.2",
    "fs-extra": "9.0.1",
    "geo-coder": "0.2.1",
    "gm": "1.23.1",
    "helmet": "3.23.3",
    "honeypot": "0.0.2",
    "html-to-text": "5.1.1",
    "http-proxy-middleware": "1.0.5",
    "inline-source": "7.0.0",
    "ip-cidr": "2.1.0",
    "itemsjs": "2.1.20",
    "jimp": "0.12.1",
    "jquery": "3.5.1",
    "js-data": "3.0.8",
    "js-data-express": "1.0.1",
    "js-data-http": "3.0.1",
    "knex": "0.19.5",
    "leaflet": "1.6.0",
    "leaflet-editable-polyline": "1.0.8",
    "leaflet.markercluster": "1.4.1",
    "lz-string": "1.4.4",
    "marked": "0.8.2",
    "minimist": "1.2.5",
    "music-metadata": "6.4.0",
    "mysql": "2.18.1",
    "ngx-file-drop": "6.0.1",
    "ngx-lightbox": "1.2.0",
    "ngx-md": "7.1.3",
    "ngx-toastr": "10.2.0",
    "node-noop": "1.0.0",
    "promise-serial": "0.1.5",
    "readdirp": "2.2.1",
    "redis": "3.0.2",
    "request-ip": "2.1.3",
    "rsmq-worker": "0.5.2",
    "rxjs": "6.6.0",
    "sitemap": "2.2.0",
    "sitemap-stream-parser": "1.7.0",
    "sqlite3": "5.1.4",
    "tz-lookup": "6.1.25",
    "validator": "13.1.1",
    "vid-streamer": "1.0.0",
    "vis": "4.21.0",
    "xregexp": "4.3.0",
    "zone.js": "0.10.3"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "0.13.10",
    "@angular-devkit/core": "7.3.10",
    "@angular/cli": "7.3.10",
    "@angular/compiler-cli": "7.2.16",
    "@compodoc/compodoc": "1.1.11",
    "@types/fluent-ffmpeg": "2.1.21",
    "@types/geojson": "7946.0.8",
    "@types/jasmine": "3.5.11",
    "@types/leaflet": "1.9.3",
    "@types/leaflet.markercluster": "1.5.1",
    "@types/node": "14.0.22",
    "@types/vis": "4.21.24",
    "babel-core": "6.26.3",
    "babel-loader": "7.1.5",
    "classlist.js": "1.1.20150312",
    "codelyzer": "5.2.2",
    "cpx": "1.5.0",
    "cross-os": "1.5.0",
    "cross-var-no-babel": "1.2.0",
    "enhanced-resolve": "4.1.1",
    "extract-zip": "2.0.1",
    "istanbul": "0.4.5",
    "istanbul-api": "1.3.7",
    "jasmine-core": "4.0.1",
    "jasmine-spec-reporter": "7.0.0",
    "karma": "6.4.1",
    "karma-chrome-launcher": "3.1.1",
    "karma-cli": "2.0.0",
    "karma-coverage-istanbul-reporter": "3.0.3",
    "karma-jasmine": "4.0.2",
    "karma-jasmine-html-reporter": "2.0.0",
    "karma-phantomjs-launcher": "1.0.4",
    "mkdirp": "2.1.5",
    "patch-package": "6.5.1",
    "postcss-load-config": "2.1.0",
    "postcss-loader": "3.0.0",
    "protractor": "7.0.0",
    "redis-dump": "0.1.10",
    "remap-istanbul": "0.13.0",
    "rimraf": "3.0.2",
    "string-replace-loader": "2.3.0",
    "symlink-dir": "5.1.1",
    "ts-loader": "7.0.5",
    "ts-node": "8.10.1",
    "tslib": "1.13.0",
    "tslint": "6.1.2",
    "typescript": "3.2.4",
    "webpack-bundle-analyzer": "4.7.0",
    "webpack-cli": "3.3.12"
  }
}
